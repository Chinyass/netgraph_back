// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username String   @unique
  email     String   @unique
  password String
  isActivated Boolean @default(false)
  activationLink String?
  tokens Token[]
}

model Token {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
}


model Node {
  id Int @id @default(autoincrement())
  ip String @unique
  name String?
  model String?
  mac String?
  ping Boolean @default(false)
  snmp Boolean @default(false)
  error String?
  zoneId Int?       
  zone Zone? @relation(fields: [zoneId], references: [id])
  roles Role[] @relation("NodeRoles")
  locationId Int?
  location Location? @relation(fields: [locationId], references: [id])
  address String?
}

model Location {
  id          Int              @id @default(autoincrement())
  name        String @unique
  nodes Node[]
}

model Zone {
  id Int @id @default(autoincrement())
  code String @unique
  name String @unique
  localityId Int?
  locality Locality? @relation(fields: [localityId], references: [id])
  nodes Node[]
}

model Locality {
  id Int @id @default(autoincrement())
  name        String @unique
  zones Zone[]
}

model Role {
  id Int @id @default(autoincrement())
  name String @unique
  nodes Node[] @relation("NodeRoles")
}